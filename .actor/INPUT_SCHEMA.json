{
    "title": "CheerioCrawler Template",
    "type": "object",
    "schemaVersion": 1,
    "properties": {
        "startUrls": {
            "title": "Expedia or Hotels.com URLs",
            "type": "array",
            "description": "URLs of hotels to scrape reviews from. If you add any userData, it will be included in each review for given hotel under the key `customData`",
            "editor": "requestListSources",
            "prefill": [
                {
                    "url": "https://www.expedia.com/Prague-Hotels-Hotel-Krystal.h10966026.Hotel-Information"
                }
            ]
        },
        "maxReviewsPerHotel": {
            "title": "Maximum reviews per hotel",
            "type": "integer",
            "minimum": 1,
            "description": "Maximum number of reviews to scrape per hotel",
            "default": 99999999
        },
        "proxyConfiguration": {
            "title": "Proxy configuration",
            "type": "object",
            "description": "Optionally use Apify Proxy",
            "default": {
                "useApifyProxy": true,
                "apifyProxyGroups": ["RESIDENTIAL"]
            },
            "editor": "proxy"
        },
        "debugLog": {
            "title": "Enable debug logging",
            "type": "boolean",
            "editor": "checkbox",
            "description": "Enables more verbose logging"
        },
        "maxRequestRetries": {
            "title": "Maximum request retries",
            "type": "integer",
            "minimum": 2,
            "description": "Maximum number of retries when a request fails",
            "default": 8
        },
        "sortBy": {
            "title": "Sort by (see note)",
            "type": "string",
            "description": "Note: this will not affect the order of reviews in the dataset, since review items are scraped in parallel, so later pages might finish before previous ones. However, it helps in the case you are limiting maximum number of reviews per hotel.",
            "editor": "select",
            "default": "Most relevant",
            "enum": [
                "Most relevant",
                "Most recent",
                "Highest guest rating",
                "Lowest guest rating"
            ]
        }
    },
    "required": ["startUrls"]
}
